{
  "name": "cmake-language-model-tools",
  "publisher": "arno-dev",
  "displayName": "CMake Language Model Tools",
  "description": "Give Copilot access to CMake Tools",
  "version": "0.2.1",
  "license": "SEE LICENSE IN LICENSE.txt",
  "homepage": "https://github.com/itavero/vscode-cmake-language-model-tools",
  "repository": {
    "type": "git",
    "url": "https://github.com/itavero/vscode-cmake-language-model-tools.git"
  },
  "bugs": {
    "url": "https://github.com/itavero/vscode-cmake-language-model-tools/issues",
    "email": "vscode@arno.dev"
  },
  "sponsor": {
    "url": "https://github.com/sponsors/itavero"
  },
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "AI",
    "Chat"
  ],
  "keywords": [
    "CMake",
    "Copilot"
  ],
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#DCE3EC",
    "theme": "light"
  },
  "qna": false,
  "activationEvents": [
    "workspaceContains:CMakeLists.txt",
    "workspaceContains:**/CMakeLists.txt"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "languageModelTools": [
      {
        "name": "get_cmake_project_info",
        "displayName": "Get CMake Project Info",
        "modelDescription": "Returns comprehensive information about the CMake project including source directory, build directory, and a list of all targets with their types and relative source directories (when within the workspace). This provides a high-level overview of the project structure and available build targets as well as a hint to where the targets are defined.",
        "userDescription": "Get comprehensive information about the current CMake project",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "get_cmake_project_info",
        "icon": "$(info)"
      },
      {
        "name": "get_cmake_cache_variable",
        "displayName": "Get CMake Cache Variable",
        "modelDescription": "Retrieves a single variable from the CMake cache (e.g. CMakeCache.txt in the build directory) with documentation and type information. If the exact variable name is not found, it will suggest the closest match and list the names of all available variable. If no variable_name is supplied, all available variable names will be returned. This is useful for getting configuration values that are kept in the CMake cache.",
        "userDescription": "Get a variable from the CMakeCache.txt",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "get_cmake_cache_variable",
        "icon": "$(symbol-variable)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "variable_name": {
              "type": "string",
              "description": "Name of the CMake cache variable that you wish to retrieve. If not specified, all available variable names will be returned, which can be used for a follow-up query to get the value of a specific variable."
            }
          }
        }
      },
      {
        "name": "build_cmake_target",
        "displayName": "Build CMake Target",
        "modelDescription": "Builds the specified CMake target or all targets if none is specified. This executes the build process for the given targets.",
        "userDescription": "Build CMake targets",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "build_cmake_target",
        "icon": "$(cmake-tools-build)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "targets": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional list of target names to build. If not specified, builds all targets."
            }
          }
        }
      },
      {
        "name": "configure_cmake_project",
        "displayName": "Configure CMake Project",
        "modelDescription": "Configures the CMake project, optionally deleting the cache first for a clean reconfiguration. This is useful when you need to refresh the project configuration or when CMake configuration has changed.",
        "userDescription": "Configure/reconfigure the CMake project",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "configure_cmake_project",
        "icon": "$(cmake-tools-configure)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "delete_cache": {
              "type": "boolean",
              "description": "Whether to delete the CMake cache before configuring. If true, performs a clean reconfiguration. Defaults to false."
            }
          }
        }
      },
      {
        "name": "find_cmake_build_target_containing_file",
        "displayName": "Find CMake Build Target Containing File",
        "modelDescription": "Helps to find the CMake target(s) that can build/include a specific file in the workspace. It searches for targets that either have the file listed as a source, have an include directory that contains the file, or the target's source directory matches the file's path. Returns target information including their relative source directories (when within the workspace) to help locate associated CMakeLists.txt files. This is useful for determining which targets to build when testing if a specific file can be compiled successfully.",
        "userDescription": "Find CMake targets that can build/include a specific file",
        "canBeReferencedInPrompt": true,
        "toolReferenceName": "find_cmake_build_target_containing_file",
        "icon": "$(search)",
        "inputSchema": {
          "type": "object",
          "properties": {
            "file_path": {
              "type": "string",
              "description": "The path to the file to search for in CMake targets. Can be absolute or relative to the workspace."
            }
          },
          "required": [
            "file_path"
          ]
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "clean": "npx rimraf -g out/* *.vsix",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "package": "npx dotenv vsce package --",
    "publish": "npx dotenv vsce publish --",
    "release": "npx dotenv release-it --"
  },
  "devDependencies": {
    "@release-it/keep-a-changelog": "^7.0.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^22.17.0",
    "@types/vscode": "^1.102.0",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "dotenv-cli": "^10.0.0",
    "eslint": "^9.32.0",
    "release-it": "^19.0.4",
    "rimraf": "^6.0.1",
    "typescript": "~5.8.3"
  },
  "extensionDependencies": [
    "ms-vscode.cmake-tools"
  ],
  "dependencies": {
    "vscode-cmake-tools": "^1.3.0"
  }
}